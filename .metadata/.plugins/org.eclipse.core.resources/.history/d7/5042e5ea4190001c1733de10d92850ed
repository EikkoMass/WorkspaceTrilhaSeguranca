package LoginServlet;

import static com.sun.org.apache.xml.internal.security.utils.Base64.decode;

import java.io.IOException;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.sql.Connection;
import java.util.Base64;
import java.util.Base64.Decoder;

import javax.servlet.ServletException;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import ArmaDadosUsuario.ArmazenaDadosUsuario;
import AutenticacaoJdbcDAO.JDBCAutenticaDAO;
import Conexao.Conexao;

public class AutenticacaoServlet extends HttpServlet {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	private void process(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		try {
			final String salt = "salted";
			byte[] decodedPassword = Base64.getDecoder().decode(request.getParameter("senha"));
			
			
			String password = new String(decodedPassword) + salt;
			String senmd5 = "";
			MessageDigest md = null;
			try
			{
				md = MessageDigest.getInstance("MD5");
			}
			catch(NoSuchAlgorithmException ex)
			{
				ex.printStackTrace();
			}
			
			BigInteger hash = new BigInteger(1, md.digest(password.getBytes()));
			
			senmd5 = hash.toString(16);
			
			String username = request.getParameter("nome");
			
			
			ArmazenaDadosUsuario dadosUsuario = new ArmazenaDadosUsuario(username, senmd5);

			Conexao conexao = new Conexao();
			Connection connection = (Connection) conexao.abrirConexao();
			JDBCAutenticaDAO jdbc = new JDBCAutenticaDAO(connection);
			boolean retorno = jdbc.consultar(dadosUsuario);

			
			conexao.fecharConexao();
			
			if(retorno)
			{
				request.setAttribute("login", username);
				response.addCookie(new Cookie("login", username));
				response.addCookie(new Cookie("sessionId", request.getSession().getId()));
				response.sendRedirect("Acesso/principal.html");
			}
			else
			{
				response.sendRedirect("erro.html");				
			}
				
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		process(request, response);
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		process(request, response);
	}

}
